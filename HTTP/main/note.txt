!1  什么是HTTP协议
    超文本传输协议
!2  有什么
    #1  请求行/状态行
        %1  请求行
            &1  方法名
            &2  URL
            &3  协议版本
        %2  状态行
            &1  协议版本
            &2  状态码
            &3  状态码描述
    #2  请求头/响应头
    #3  请求体/响应体
!3  不足
    #1  HTTP1
        %1  队头阻塞
        %2  传输效率低
        %3  明文传输不安全
    #2  HTTP2
        %1  多路复用
        %2  头部压缩
        %3  二进制协议
    #3  QUIC
        %1  基于UDP实现
        %2  解决队头阻塞
        %3  加密减少握手次数
        %4  支持快速启动
!4  分层设计
    #1  OSI七层网络模型
        应用层、表示层、会话层、传输层、网轮层、数据链路层、物理层
    #2  TCP/IP四层概念模型
        应用层(应用层、表示层、会话层)
        传输层(传输层)
        网络层(网络层)
        数据链路层(数据链路层、物理层)
!5  应用层设计
    提供合理的 API
    #1  可理解性
    #2  简单性
    #3  冗余性
    #4  兼容性
    #5  可测性
    #6  可见性
!6  中间件设计
    洋葱模型
    #1  配合 Handler 实现一个完整的请求处理生命周期
    #2  拥有预处理逻辑与后处理逻辑
    #3  可以注册多中间件
    #4  对上层模块用户逻辑模块易用
!7  路由设计
    前缀匹配树
    框架路由实际上就是为 URL 匹配对应的处理函数 (Handlers)
    #1  静态路由 /a/b/c  /a/b/d
    #2  参数路由 /a/:id/c  (/a/b/c  /a/b/d)  /*all
    #3  路由修复 /a/b  <->  /a/b/
    #4  冲突路由以及优先级 /a/b  /:id/c
    #5  匹配 HTTP 方法
    #6  多处理函数：方便添加中间件
    #7  ...
!8  协议层设计
    抽象出合适的接口
!9  网络层设计
    #1  BIO
    #2  NIO